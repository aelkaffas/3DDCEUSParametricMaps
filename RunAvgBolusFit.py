#import ParaMapFunctions as pmimport ParaMapFunctionsParallel as pmimport sys, os, globimport nibabel as nibfrom datetime import datetimeimport numpy as npimport dicom####from matplotlib import pyplot as plt#from matplotlib.pyplot import figure, show#import skimage.transform#import xlrd#import sys, os#import SimpleITK as sitk# ## Plotting function to check out image at any location of code.# plotimg = imarray_org[0,40,0,:,:,:] # give it a 3D, not 6D# fig = plt.figure();# ax = fig.add_subplot(111);# tracker = pm.IndexTracker(ax, plotimg);# fig.canvas.mpl_connect('scroll_event', tracker.onscroll);# plt.show();if __name__ == "__main__":		# Initiations	print('Started:');print(sys.argv[1]);print(str(datetime.now()));	path = os.path.normpath(sys.argv[1]);	splitpath = path.split(os.sep);	maskflag = 'no' # flag to indicate auto-masking yes/no - during prep_img	type = 'Bolus'	fit = 'Lognormal'	format = '3D'	compressfactor = 24.09; #24.09; #42.98 	name = splitpath[-2];	day = splitpath[-1];day = day[0:8];	if type == 'Bolus':		parameters = ['PE','AUC','TP','MTT','T0']	# Read data		newres = np.array([0.3, 0.3, 0.3]);	imarray, orgres, time, imarray_org = pm.prep_img(sys.argv[1],type,format, maskflag, newres);	print('Done 3D to 4D:');print(str(datetime.now()));	#DCM pre-selected mask	print('Applying Pre-Selected DICOM MASK')	dcmdirectory = '/scratch/users/elkaffas/ParaMap/Masks/';	#dcmdirectory = '/Users/ahmedelkaffas/Documents/GoogleDrive/AEKDocs/Stanford/Project_ParaMapTexture/PythonParametricMaps/Test3DCEUSData/';	#dcmdirectory = '/mnt/c/Users/AEK/GoogleDrive/AEKDocs/Stanford/Project_ParaMapTexture/PythonParametricMaps/Test3DCEUSData/';	imarray = pm.dcm_mask(imarray_org,dcmdirectory,name,day);	# Save the 4D image with mask	# print('Saving 4D w/ mask:');print(str(datetime.now()));	# #imarray = imarray - np.mean(imarray[:,0:4,:,:,:,:],axis=1);imarray[imarray < 1]=0;	# affine = np.eye(4)	# niiarray = nib.Nifti1Image(imarray_org[0,:,0,:,:,:].astype('uint8'),affine);#NEED TO FLIP THESE IN X,Y,Z,T for quick mevis read. 	# niiarray.header['pixdim'] = [4., newres[0], newres[1], newres[2], 1., 0., 0., 0.];	# nib.save(niiarray, (name + 'd' + day + type + 'Fu1ll4DMasked.nii')); 	# shapes = imarray.shape;	# if shapes[1]>180:	# 	imarray = imarray[:,:180,:,:,:,:];	# Run Avg Fitting	print('Start Avg Fit:');print(str(datetime.now()))	params = pm.avgfit(imarray, newres, time, type + fit, compressfactor);	print('Done Avg Fit:');print(str(datetime.now()));	print(params);	print('Saving...');	#Save data	np.savetxt(name + 'd' + day + type + '.txt', params, delimiter=',')	print('Done Saving Avg Fit:');print(str(datetime.now()))	